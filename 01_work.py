# Алгоритм для нахождения максимального числа
import math

# максимального элемента массива МЭМ.
# 2) Создаем список с числовыми значениями list.
# 2) Создаем переменную для хранения самого первого элемента массива (МЭМ) max_number,
# 3) Перебираем весь массив, чтобы работать с каждым элементом по отдельности.
# 4) На каждом шаге сравниваем текущий элемент с МЭМ.
# 5) Если текущий элемент больше МЭМ, заменяем МЭМ.
# 6) Возвращаем МЭМ после окончания цикла.
# 7) Вывоводим на экран МЭМ.

list = [-1, 2, 23, 4, 15, 56, 7, 18, 9, 10]

def find_max_number(list):
    max_number = list[0]
    for i in list:
        if i > max_number:
            max_number = i
    return max_number


print(find_max_number(list))

# Алгоритм для нахождения минимального числа

def find_min_number(list):
    min_number = list[0]
    for i in list:
        if i < min_number:
            min_number = i
    return min_number


print(find_min_number(list))


# Алгоримт для нахождениф факториала числа
# 1) Сравнение числа с нулем: если число равно 0, то факториал нуля будет равен 1.
# 2) Создание переменной для хранения итогового результата.
# 3) Использование цикла for и range для перебирания списка. До нашего числа включительно.
# 4) Домножение результирующей переменной на текущее число в цикле.
# 5) Возврат факториала числа после цикла.

def find_factorial(number):
    if number == 0:
        return 1

    result = 1

    for i in range(1, number + 1):
        result *= i
    return result


print(find_factorial(5))

# Алгоритм для нахождения простого числа:
# 1) Проверяем, меньше или равно ли число 1 единице. Если да, то возвращаем false.
# 2) Создаем цикл, перебирающий все числа от 2 до квадратного корня
# из нашего числа включительно (так как 2 — это первое простое число).
# 3) Проверяем, делится ли наше число на какое-то из чисел,
# которые перебирает цикл, без остатка. Если да, то возвращаем false.
# 4) Если число прошло все проверки, возвращаем true.

import math
def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, int(math.sqrt(number)) + 1):
        if number % i == 0:
            return False

    return True

print(is_prime(7))


